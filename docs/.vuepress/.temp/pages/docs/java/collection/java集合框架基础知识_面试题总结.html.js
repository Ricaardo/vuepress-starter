export const data = JSON.parse("{\"key\":\"v-047e4f98\",\"path\":\"/docs/java/collection/java%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86_%E9%9D%A2%E8%AF%95%E9%A2%98%E6%80%BB%E7%BB%93.html\",\"title\":\"Java集合框架基础知识&面试题总结\",\"lang\":\"en-US\",\"frontmatter\":{\"category\":\"Java\",\"tag\":[\"Java集合\"]},\"headers\":[{\"level\":2,\"title\":\"集合概述\",\"slug\":\"集合概述\",\"link\":\"#集合概述\",\"children\":[{\"level\":3,\"title\":\"Java 集合概览\",\"slug\":\"java-集合概览\",\"link\":\"#java-集合概览\",\"children\":[]},{\"level\":3,\"title\":\"说说 List, Set, Queue, Map 四者的区别？\",\"slug\":\"说说-list-set-queue-map-四者的区别\",\"link\":\"#说说-list-set-queue-map-四者的区别\",\"children\":[]},{\"level\":3,\"title\":\"集合框架底层数据结构总结\",\"slug\":\"集合框架底层数据结构总结\",\"link\":\"#集合框架底层数据结构总结\",\"children\":[]},{\"level\":3,\"title\":\"如何选用集合?\",\"slug\":\"如何选用集合\",\"link\":\"#如何选用集合\",\"children\":[]},{\"level\":3,\"title\":\"为什么要使用集合？\",\"slug\":\"为什么要使用集合\",\"link\":\"#为什么要使用集合\",\"children\":[]}]},{\"level\":2,\"title\":\"Collection 子接口之 List\",\"slug\":\"collection-子接口之-list\",\"link\":\"#collection-子接口之-list\",\"children\":[{\"level\":3,\"title\":\"Arraylist 和 Vector 的区别?\",\"slug\":\"arraylist-和-vector-的区别\",\"link\":\"#arraylist-和-vector-的区别\",\"children\":[]},{\"level\":3,\"title\":\"Arraylist 与 LinkedList 区别?\",\"slug\":\"arraylist-与-linkedlist-区别\",\"link\":\"#arraylist-与-linkedlist-区别\",\"children\":[]},{\"level\":3,\"title\":\"说一说 ArrayList 的扩容机制吧\",\"slug\":\"说一说-arraylist-的扩容机制吧\",\"link\":\"#说一说-arraylist-的扩容机制吧\",\"children\":[]}]},{\"level\":2,\"title\":\"Collection 子接口之 Set\",\"slug\":\"collection-子接口之-set\",\"link\":\"#collection-子接口之-set\",\"children\":[{\"level\":3,\"title\":\"comparable 和 Comparator 的区别\",\"slug\":\"comparable-和-comparator-的区别\",\"link\":\"#comparable-和-comparator-的区别\",\"children\":[]},{\"level\":3,\"title\":\"无序性和不可重复性的含义是什么\",\"slug\":\"无序性和不可重复性的含义是什么\",\"link\":\"#无序性和不可重复性的含义是什么\",\"children\":[]},{\"level\":3,\"title\":\"比较 HashSet、LinkedHashSet 和 TreeSet 三者的异同\",\"slug\":\"比较-hashset、linkedhashset-和-treeset-三者的异同\",\"link\":\"#比较-hashset、linkedhashset-和-treeset-三者的异同\",\"children\":[]}]},{\"level\":2,\"title\":\"Collection 子接口之 Queue\",\"slug\":\"collection-子接口之-queue\",\"link\":\"#collection-子接口之-queue\",\"children\":[{\"level\":3,\"title\":\"Queue 与 Deque 的区别\",\"slug\":\"queue-与-deque-的区别\",\"link\":\"#queue-与-deque-的区别\",\"children\":[]},{\"level\":3,\"title\":\"ArrayDeque 与 LinkedList 的区别\",\"slug\":\"arraydeque-与-linkedlist-的区别\",\"link\":\"#arraydeque-与-linkedlist-的区别\",\"children\":[]},{\"level\":3,\"title\":\"说一说 PriorityQueue\",\"slug\":\"说一说-priorityqueue\",\"link\":\"#说一说-priorityqueue\",\"children\":[]}]},{\"level\":2,\"title\":\"Map 接口\",\"slug\":\"map-接口\",\"link\":\"#map-接口\",\"children\":[{\"level\":3,\"title\":\"HashMap 和 Hashtable 的区别\",\"slug\":\"hashmap-和-hashtable-的区别\",\"link\":\"#hashmap-和-hashtable-的区别\",\"children\":[]},{\"level\":3,\"title\":\"HashMap 和 HashSet 区别\",\"slug\":\"hashmap-和-hashset-区别\",\"link\":\"#hashmap-和-hashset-区别\",\"children\":[]},{\"level\":3,\"title\":\"HashMap 和 TreeMap 区别\",\"slug\":\"hashmap-和-treemap-区别\",\"link\":\"#hashmap-和-treemap-区别\",\"children\":[]},{\"level\":3,\"title\":\"HashSet 如何检查重复\",\"slug\":\"hashset-如何检查重复\",\"link\":\"#hashset-如何检查重复\",\"children\":[]},{\"level\":3,\"title\":\"HashMap 的底层实现\",\"slug\":\"hashmap-的底层实现\",\"link\":\"#hashmap-的底层实现\",\"children\":[]},{\"level\":3,\"title\":\"HashMap 的长度为什么是 2 的幂次方\",\"slug\":\"hashmap-的长度为什么是-2-的幂次方\",\"link\":\"#hashmap-的长度为什么是-2-的幂次方\",\"children\":[]},{\"level\":3,\"title\":\"HashMap 多线程操作导致死循环问题\",\"slug\":\"hashmap-多线程操作导致死循环问题\",\"link\":\"#hashmap-多线程操作导致死循环问题\",\"children\":[]},{\"level\":3,\"title\":\"HashMap 有哪几种常见的遍历方式?\",\"slug\":\"hashmap-有哪几种常见的遍历方式\",\"link\":\"#hashmap-有哪几种常见的遍历方式\",\"children\":[]},{\"level\":3,\"title\":\"ConcurrentHashMap 和 Hashtable 的区别\",\"slug\":\"concurrenthashmap-和-hashtable-的区别\",\"link\":\"#concurrenthashmap-和-hashtable-的区别\",\"children\":[]},{\"level\":3,\"title\":\"ConcurrentHashMap 线程安全的具体实现方式/底层具体实现\",\"slug\":\"concurrenthashmap-线程安全的具体实现方式-底层具体实现\",\"link\":\"#concurrenthashmap-线程安全的具体实现方式-底层具体实现\",\"children\":[]}]},{\"level\":2,\"title\":\"Collections 工具类\",\"slug\":\"collections-工具类\",\"link\":\"#collections-工具类\",\"children\":[{\"level\":3,\"title\":\"排序操作\",\"slug\":\"排序操作\",\"link\":\"#排序操作\",\"children\":[]},{\"level\":3,\"title\":\"查找,替换操作\",\"slug\":\"查找-替换操作\",\"link\":\"#查找-替换操作\",\"children\":[]},{\"level\":3,\"title\":\"同步控制\",\"slug\":\"同步控制\",\"link\":\"#同步控制\",\"children\":[]}]}],\"git\":{},\"filePathRelative\":\"docs/java/collection/java集合框架基础知识&面试题总结.md\"}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
