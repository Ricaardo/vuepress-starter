export const data = JSON.parse("{\"key\":\"v-ec93f83e\",\"path\":\"/docs/java/concurrent/java%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.html\",\"title\":\"Java线程池学习总结\",\"lang\":\"en-US\",\"frontmatter\":{\"title\":\"Java线程池学习总结\",\"category\":\"Java\",\"tag\":[\"Java并发\"]},\"headers\":[{\"level\":2,\"title\":\"一 使用线程池的好处\",\"slug\":\"一-使用线程池的好处\",\"link\":\"#一-使用线程池的好处\",\"children\":[]},{\"level\":2,\"title\":\"二 Executor 框架\",\"slug\":\"二-executor-框架\",\"link\":\"#二-executor-框架\",\"children\":[{\"level\":3,\"title\":\"2.1 简介\",\"slug\":\"_2-1-简介\",\"link\":\"#_2-1-简介\",\"children\":[]},{\"level\":3,\"title\":\"2.2 Executor 框架结构(主要由三大部分组成)\",\"slug\":\"_2-2-executor-框架结构-主要由三大部分组成\",\"link\":\"#_2-2-executor-框架结构-主要由三大部分组成\",\"children\":[]},{\"level\":3,\"title\":\"2.3 Executor 框架的使用示意图\",\"slug\":\"_2-3-executor-框架的使用示意图\",\"link\":\"#_2-3-executor-框架的使用示意图\",\"children\":[]}]},{\"level\":2,\"title\":\"三 (重要)ThreadPoolExecutor 类简单介绍\",\"slug\":\"三-重要-threadpoolexecutor-类简单介绍\",\"link\":\"#三-重要-threadpoolexecutor-类简单介绍\",\"children\":[{\"level\":3,\"title\":\"3.1 ThreadPoolExecutor 类分析\",\"slug\":\"_3-1-threadpoolexecutor-类分析\",\"link\":\"#_3-1-threadpoolexecutor-类分析\",\"children\":[]},{\"level\":3,\"title\":\"3.2 推荐使用 ThreadPoolExecutor 构造函数创建线程池\",\"slug\":\"_3-2-推荐使用-threadpoolexecutor-构造函数创建线程池\",\"link\":\"#_3-2-推荐使用-threadpoolexecutor-构造函数创建线程池\",\"children\":[]}]},{\"level\":2,\"title\":\"四 ThreadPoolExecutor 使用+原理分析\",\"slug\":\"四-threadpoolexecutor-使用-原理分析\",\"link\":\"#四-threadpoolexecutor-使用-原理分析\",\"children\":[{\"level\":3,\"title\":\"4.1 示例代码:Runnable+ThreadPoolExecutor\",\"slug\":\"_4-1-示例代码-runnable-threadpoolexecutor\",\"link\":\"#_4-1-示例代码-runnable-threadpoolexecutor\",\"children\":[]},{\"level\":3,\"title\":\"4.2 线程池原理分析\",\"slug\":\"_4-2-线程池原理分析\",\"link\":\"#_4-2-线程池原理分析\",\"children\":[]},{\"level\":3,\"title\":\"4.3 几个常见的对比\",\"slug\":\"_4-3-几个常见的对比\",\"link\":\"#_4-3-几个常见的对比\",\"children\":[]},{\"level\":3,\"title\":\"4.4 加餐:Callable+ThreadPoolExecutor示例代码\",\"slug\":\"_4-4-加餐-callable-threadpoolexecutor示例代码\",\"link\":\"#_4-4-加餐-callable-threadpoolexecutor示例代码\",\"children\":[]}]},{\"level\":2,\"title\":\"五 几种常见的线程池详解\",\"slug\":\"五-几种常见的线程池详解\",\"link\":\"#五-几种常见的线程池详解\",\"children\":[{\"level\":3,\"title\":\"5.1 FixedThreadPool\",\"slug\":\"_5-1-fixedthreadpool\",\"link\":\"#_5-1-fixedthreadpool\",\"children\":[]},{\"level\":3,\"title\":\"5.2 SingleThreadExecutor 详解\",\"slug\":\"_5-2-singlethreadexecutor-详解\",\"link\":\"#_5-2-singlethreadexecutor-详解\",\"children\":[]},{\"level\":3,\"title\":\"5.3 CachedThreadPool 详解\",\"slug\":\"_5-3-cachedthreadpool-详解\",\"link\":\"#_5-3-cachedthreadpool-详解\",\"children\":[]}]},{\"level\":2,\"title\":\"六 ScheduledThreadPoolExecutor 详解\",\"slug\":\"六-scheduledthreadpoolexecutor-详解\",\"link\":\"#六-scheduledthreadpoolexecutor-详解\",\"children\":[{\"level\":3,\"title\":\"6.1 简介\",\"slug\":\"_6-1-简介\",\"link\":\"#_6-1-简介\",\"children\":[]},{\"level\":3,\"title\":\"6.2 运行机制\",\"slug\":\"_6-2-运行机制\",\"link\":\"#_6-2-运行机制\",\"children\":[]},{\"level\":3,\"title\":\"6.3 ScheduledThreadPoolExecutor 执行周期任务的步骤\",\"slug\":\"_6-3-scheduledthreadpoolexecutor-执行周期任务的步骤\",\"link\":\"#_6-3-scheduledthreadpoolexecutor-执行周期任务的步骤\",\"children\":[]}]},{\"level\":2,\"title\":\"七 线程池大小确定\",\"slug\":\"七-线程池大小确定\",\"link\":\"#七-线程池大小确定\",\"children\":[]},{\"level\":2,\"title\":\"八 参考\",\"slug\":\"八-参考\",\"link\":\"#八-参考\",\"children\":[]},{\"level\":2,\"title\":\"九 其他推荐阅读\",\"slug\":\"九-其他推荐阅读\",\"link\":\"#九-其他推荐阅读\",\"children\":[]}],\"git\":{},\"filePathRelative\":\"docs/java/concurrent/java线程池学习总结.md\"}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
